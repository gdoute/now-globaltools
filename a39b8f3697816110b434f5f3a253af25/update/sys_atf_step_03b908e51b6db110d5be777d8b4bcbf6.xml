<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step">
    <sys_atf_step action="INSERT_OR_UPDATE">
        <active>true</active>
        <copied_from/>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <mugshots_cache_json/>
        <notes/>
        <order>1</order>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>tom.hauri</sys_created_by>
        <sys_created_on>2023-09-27 14:26:38</sys_created_on>
        <sys_id>03b908e51b6db110d5be777d8b4bcbf6</sys_id>
        <sys_mod_count>143</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="Global Tools" source="a39b8f3697816110b434f5f3a253af25">a39b8f3697816110b434f5f3a253af25</sys_package>
        <sys_policy/>
        <sys_scope display_value="Global Tools">a39b8f3697816110b434f5f3a253af25</sys_scope>
        <sys_update_name>sys_atf_step_03b908e51b6db110d5be777d8b4bcbf6</sys_update_name>
        <sys_updated_by>tom.hauri</sys_updated_by>
        <sys_updated_on>2024-08-04 08:54:26</sys_updated_on>
        <table/>
        <test display_value="GlobalTools Tests">171600e11b6db110d5be777d8b4bcbbc</test>
        <timeout/>
        <warning_message/>
    </sys_atf_step>
    <sys_variable_value action="delete_multiple" query="document_key=03b908e51b6db110d5be777d8b4bcbf6"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>03b908e51b6db110d5be777d8b4bcbf6</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>tom.hauri</sys_created_by>
        <sys_created_on>2023-09-27 14:26:38</sys_created_on>
        <sys_id>f74a88e51b6db110d5be777d8b4bcb1a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>tom.hauri</sys_updated_by>
        <sys_updated_on>2023-09-27 14:26:38</sys_updated_on>
        <value>3.1</value>
        <variable display_value="Jasmine version">42f2564b73031300440211d8faf6a777</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>03b908e51b6db110d5be777d8b4bcbf6</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>tom.hauri</sys_created_by>
        <sys_created_on>2023-09-27 14:26:38</sys_created_on>
        <sys_id>ff4a88e51b6db110d5be777d8b4bcb1a</sys_id>
        <sys_mod_count>143</sys_mod_count>
        <sys_updated_by>tom.hauri</sys_updated_by>
        <sys_updated_on>2024-08-04 08:54:26</sys_updated_on>
        <value>(function(outputs, steps, params, stepResult, assertEqual) {&#13;
&#13;
	var bLog = false;&#13;
	var _gt = new global.GlobalTools();&#13;
	var _gtATF = new global.GlobalToolsATF('GlobalTools', _gt, bLog, outputs, steps, params, stepResult, assertEqual);&#13;
	var grRecord;&#13;
&#13;
	_gtATF.runATF('nsub', 'na', '', 'na');&#13;
	_gtATF.runATF('nsub', undefined, '');&#13;
	_gtATF.runATF('nsub', 'val', 'val', 'na');&#13;
	_gtATF.runATF('nsub', '', '', null, 'string');&#13;
	_gtATF.runATF('nsub', '', null, null, 'array');&#13;
	_gtATF.runATF('nsub', false, false, true);&#13;
	_gtATF.runATF('nsub', true, '', true, 'boolean');&#13;
	_gtATF.runATF('nsub', 0, 0, 1);&#13;
&#13;
	_gtATF.runATF('getType', 'string', 'string');&#13;
	_gtATF.runATF('getType', 'string', '');&#13;
	_gtATF.runATF('getType', 'string', new String());&#13;
	_gtATF.runATF('getType', 'boolean', false);&#13;
	_gtATF.runATF('getType', 'boolean', true);&#13;
	_gtATF.runATF('getType', 'boolean', new Boolean());&#13;
	_gtATF.runATF('getType', 'number', 1);&#13;
	_gtATF.runATF('getType', 'number', 0.1);&#13;
	_gtATF.runATF('getType', 'number', -1);&#13;
	_gtATF.runATF('getType', 'number', new Number());&#13;
	_gtATF.runATF('getType', 'date', new Date());&#13;
	_gtATF.runATF('getType', 'glidedate', new GlideDate(new Date()));&#13;
	_gtATF.runATF('getType', 'glidedatetime', new GlideDateTime());&#13;
	_gtATF.runATF('getType', 'glidetime', new GlideTime());&#13;
	_gtATF.runATF('getType', 'glideduration', new GlideDuration());&#13;
	_gtATF.runATF('getType', 'array', []);&#13;
	_gtATF.runATF('getType', 'array', new Array());&#13;
	_gtATF.runATF('getType', 'array', ['a', 'b']);&#13;
	_gtATF.runATF('getType', 'object', {});&#13;
	_gtATF.runATF('getType', 'object', new Object());&#13;
	_gtATF.runATF('getType', 'object', {'a': 'b'});&#13;
	grRecord = _gtATF.getRecord('task', 'sys_class_name=task');&#13;
	_gtATF.runATF('getType', 'gliderecord', grRecord);&#13;
	_gtATF.runATF('getType', 'GlideRecord', grRecord, true);&#13;
	_gtATF.runATF('getType', 'gliderecordsecure', new GlideRecordSecure('incident'));&#13;
	_gtATF.runATF('getType', 'null', null);&#13;
	_gtATF.runATF('getType', 'undefined', undefined);&#13;
	_gtATF.runATF('getType', 'undefined');&#13;
&#13;
	_gtATF.runATF('isEqual', true, 'test', 'test');&#13;
	_gtATF.runATF('isEqual', false, 'test', 'test1');&#13;
	_gtATF.runATF('isEqual', true, 100, 100);&#13;
	_gtATF.runATF('isEqual', true, 100, 100.0);&#13;
	_gtATF.runATF('isEqual', true, true, true);&#13;
	_gtATF.runATF('isEqual', true, false, false);&#13;
	_gtATF.runATF('isEqual', false, true, false);&#13;
	var dDate = new Date();&#13;
	_gtATF.runATF('isEqual', true, dDate, dDate);&#13;
	_gtATF.runATF('isEqual', false, new Date(), new Date());&#13;
	_gtATF.runATF('isEqual', true, ['a', 'b'], ['b', 'a']);&#13;
	_gtATF.runATF('isEqual', false, ['a', 'b'], ['b', 'c']);&#13;
	_gtATF.runATF('isEqual', true, {'test': ['a', 'b']}, {'test': ['b', 'a']});&#13;
	_gtATF.runATF('isEqual', false, {'test': ['a', 'b']}, {'test': ['c', 'a']});&#13;
	_gtATF.runATF('isEqual', true, {'test': {'test0': 'a', 'test1': ['a', 'b']}}, {'test': {'test1': ['b', 'a'], 'test0': 'a'}});&#13;
	_gtATF.runATF('isEqual', false, {'test': {'test0': 'a', 'test1': ['a', 'b']}}, {'test': {'test1': ['b', 'a']}, 'test0': 'b'});&#13;
&#13;
	_gtATF.runATF('deepSort', '', '');&#13;
	_gtATF.runATF('deepSort', 'sugus', 'sugus');&#13;
	_gtATF.runATF('deepSort', {}, {});&#13;
	_gtATF.runATF('deepSort', 1, 1);&#13;
	_gtATF.runATF('deepSort', [], []);&#13;
	_gtATF.runATF('deepSort', ['a', 'b', 'C'], ['b', 'C', 'a']);&#13;
	_gtATF.runATF('deepSort', [['a', 'b'], ['b']], [['b'], ['b', 'a']]);&#13;
	_gtATF.runATF('deepSort', ['b', ['b', 'a']], [['b', 'a'], 'b']); // use generic sort, as not the same type&#13;
	_gtATF.runATF('deepSort', [1,2,3,10,20], [3,2,10,20,1]);&#13;
	_gtATF.runATF('deepSort', [[1,2,3,10,20], [5,6,15,50,60]], [[5,50,60,6,15], [3,2,10,20,1]]);&#13;
	_gtATF.runATF('deepSort', [[[-1,0, 100], [1,2,3,10,20]], [[1,2,3,10,20], [5,6,15,50,60]]], [[[5,50,60,6,15], [3,2,10,20,1]], [[3,2,10,20,1], [100,-1,0]]]);&#13;
	_gtATF.runATF('deepSort', {'abc': 'def', 'sugus': 'gugus'}, {'sugus': 'gugus', 'abc': 'def'});&#13;
	_gtATF.runATF('deepSort', {'abc': [1,2,3,10,20], 'sugus': 'gugus'}, {'sugus': 'gugus', 'abc': [3,2,10,20,1]});&#13;
	_gtATF.runATF('deepSort', [{'ABC': 'def', 'xyz': {1: '2', 3: '1'}}, {'abc': [1,2,3,10,20], 'sugus': 'gugus'}], [{'sugus': 'gugus', 'abc': [3,2,10,20,1]}, {'xyz': {3: '1', 1: '2'}, 'ABC': 'def'}]);&#13;
&#13;
	_gtATF.runATF('encodeNewLineToTag', 'test', 'test');&#13;
	_gtATF.runATF('encodeNewLineToTag', '', '');&#13;
	_gtATF.runATF('encodeNewLineToTag', 'test!^br^!test1!^br^!test2', 'test\ntest1\ntest2');&#13;
	_gtATF.runATF('decodeTagToNewLine', 'test', 'test');&#13;
	_gtATF.runATF('decodeTagToNewLine', '', '');&#13;
	_gtATF.runATF('decodeTagToNewLine', 'test\ntest1\ntest2', 'test!^br^!test1!^br^!test2');&#13;
&#13;
	_gtATF.runATF('padNumber', undefined);&#13;
	_gtATF.runATF('padNumber', undefined, '');&#13;
	_gtATF.runATF('padNumber', '00000001', 1);&#13;
	_gtATF.runATF('padNumber', '00000001', '1');&#13;
	_gtATF.runATF('padNumber', '000001', 1, 6);&#13;
&#13;
	_gtATF.runATF('formatBytes', undefined);&#13;
	_gtATF.runATF('formatBytes', undefined, '');&#13;
	_gtATF.runATF('formatBytes', undefined, 'abc');&#13;
	_gtATF.runATF('formatBytes', undefined, -1);&#13;
	_gtATF.runATF('formatBytes', '0 B', 0);&#13;
	_gtATF.runATF('formatBytes', '0 B', '0');&#13;
	_gtATF.runATF('formatBytes', '1 B', 1);&#13;
	_gtATF.runATF('formatBytes', '1 B', '1');&#13;
	_gtATF.runATF('formatBytes', '999 B', 999);&#13;
	_gtATF.runATF('formatBytes', '1 KB', 1000);&#13;
	_gtATF.runATF('formatBytes', '1.02 KB', 1024);&#13;
	_gtATF.runATF('formatBytes', '1 MB', 1000001);&#13;
	_gtATF.runATF('formatBytes', '1 GB', 1000000001);&#13;
	_gtATF.runATF('formatBytes', '156.88 GB', 156879898741, 4);&#13;
	_gtATF.runATF('formatBytes', '1 TB', 1000000000001);&#13;
	_gtATF.runATF('formatBytes', '1 PB', 1000000000000001);&#13;
	_gtATF.runATF('formatBytes', '0 B', 0, 'iec');&#13;
	_gtATF.runATF('formatBytes', '0 B', '0', 'iec');&#13;
	_gtATF.runATF('formatBytes', '1 B', 1, 'iec');&#13;
	_gtATF.runATF('formatBytes', '1 B', '1', 'iec');&#13;
	_gtATF.runATF('formatBytes', '1000 B', 1000, 'iec');&#13;
	_gtATF.runATF('formatBytes', '1 KiB', 1024, 'iec');&#13;
	_gtATF.runATF('formatBytes', '1 KiB', 1025, 'iec');&#13;
	_gtATF.runATF('formatBytes', '1 MiB', 1048576, 'iec');&#13;
	_gtATF.runATF('formatBytes', '1 GiB', 1073741824, 'iec');&#13;
	_gtATF.runATF('formatBytes', '12.5484 GiB', 13473741824, 'iec', 4);&#13;
	_gtATF.runATF('formatBytes', '1 TiB', 1099511627776, 'iec');&#13;
	_gtATF.runATF('formatBytes', '1 PiB', 1125899906842624, 'iec');&#13;
	_gtATF.runATF('formatBytes', '1 PiB', 1125899906842629, 'iec');&#13;
	&#13;
	_gtATF.runATF('replacePlaceholders', undefined);&#13;
	_gtATF.runATF('replacePlaceholders', 'test, [sugus1]', 'test, [sugus1]');&#13;
	_gtATF.runATF('replacePlaceholders', 'test, value1', 'test, [sugus1]', {'sugus1': 'value1'});&#13;
	_gtATF.runATF('replacePlaceholders', 'test, [sugus1], value2', 'test, [sugus1], [sugus2]', {'sugus2': 'value2'});&#13;
	_gtATF.runATF('replacePlaceholders', 'test, value1, value2', 'test, [sugus1], [sugus2]', {'sugus1': 'value1','sugus2': 'value2'});&#13;
	_gtATF.runATF('replacePlaceholders', '{"test":"value0","test1":"value1","test2":"value2"}', {'test': 'value0', 'test1': '[sugus1]', 'test2': '[sugus2]'}, {'sugus1': 'value1','sugus2': 'value2'});&#13;
	_gtATF.runATF('replacePlaceholders', '{"test": "value0", "test1": value1}', '{"test": "value0", "test1": [sugus1]}', {'sugus1': 'value1','sugus2': 'value2'}, true);&#13;
	grRecord = _gtATF.getRecord('incident', 'active=true');&#13;
	_gtATF.runATF('replacePlaceholders', 'test, ' + grRecord.getValue('number'), 'test, [number]', grRecord);&#13;
&#13;
	_gtATF.runATF('convertUnderscoretoCamelCase', undefined);&#13;
	_gtATF.runATF('convertUnderscoretoCamelCase', 'Test', 'test');&#13;
	_gtATF.runATF('convertUnderscoretoCamelCase', 'TestSugus0Sugus1Sugus2', 'test_sugus0_sugus1_sugus2');&#13;
	&#13;
	_gtATF.runATF('getHTMLDiffFromXML', undefined);&#13;
	_gtATF.runATF('getHTMLDiffFromXML', undefined, '&lt;xml&gt;&lt;/xml&gt;');&#13;
	_gtATF.runATF('getHTMLDiffFromXML', undefined, '&lt;xml&gt;&lt;/xml&gt;', '&lt;xml&gt;&lt;/xml&gt;');&#13;
	_gtATF.runATF('getHTMLDiffFromXML', /equal/gi, '&lt;syslog&gt;&lt;sys_id&gt;test&lt;/sys_id&gt;&lt;/syslog&gt;', '&lt;syslog&gt;&lt;sys_id&gt;test&lt;/sys_id&gt;&lt;/syslog&gt;', '---Left---', '---Right---');&#13;
	_gtATF.runATF('getHTMLDiffFromXML', /replace/gi, '&lt;syslog&gt;&lt;sys_id&gt;test&lt;/sys_id&gt;&lt;/syslog&gt;', '&lt;syslog&gt;&lt;sys_id&gt;test1&lt;/sys_id&gt;&lt;/syslog&gt;', '---Left---', '---Right---');&#13;
&#13;
	var sScheduledScriptId = _gt.scheduleScript('GlobalTools', 'getType', 1, ['string'], [], 'atf_test_atf');&#13;
	if (sScheduledScriptId) {&#13;
		grRecord = _gtATF.getRecord('sys_trigger', 'sys_id=' + sScheduledScriptId);&#13;
	} // if schedule&#13;
	if ((!sScheduledScriptId) || (!grRecord) || (grRecord.getValue('name') != 'atf_test_atf')) {&#13;
		_gtATF.addError('scheduleScript', 'Schedule record was not created correctly.');&#13;
	} // if no id, record or wrong name&#13;
&#13;
	_gtATF.runATF('scheduleHandler', false); // false if no arguments&#13;
	_gtATF.runATF('scheduleHandler', undefined, 'atf_test_atf', 100);&#13;
	grRecord = _gtATF.getRecord('sysevent', 'name=atf_test_atf');&#13;
	if ((!grRecord) || (grRecord.getValue('name') != 'atf_test_atf')) {&#13;
		_gtATF.addError('scheduleHandler', 'User record was not created correctly.');&#13;
	} // if event found&#13;
	_gtATF.runATF('scheduleHandler', undefined, 'atf_test_atf', null, 'stop', 'name=atf_test_atf^state=ready');&#13;
		&#13;
	_gtATF.runATF('getUrl', undefined);&#13;
&#13;
	_gtATF.runATF('getExecutionTrackerbyId', undefined);&#13;
	&#13;
	_gtATF.runATF('sleep', undefined, 1);&#13;
&#13;
	_gtATF.runATF('runFunction', 'string_string2_string3', 'function (sString, sString1, sString2) {return sString + "_" + sString1 + "_" + sString2;}', 'string', 'string2', 'string3');&#13;
	_gtATF.runATF('runFunction', 'string_string2_string3', 'function(sString, sString1, sString2) {return sString + "_" + sString1 + "_" + sString2;}', 'string', 'string2', 'string3');&#13;
	_gtATF.runATF('runFunction', 'string_string2_string3', 'function  (sString, sString1, sString2) {return sString + "_" + sString1 + "_" + sString2;}', 'string', 'string2', 'string3');&#13;
&#13;
	if (gs.getProperty('glide.record.legacy_cross_scope_access_policy_in_script') == 'true') {&#13;
		_gtATF.runATF('runFunctionInScope', 'string_string2_string3', 'function (sString, sString1, sString2) {return sString + "_" + sString1 + "_" + sString2;}', '', 'string', 'string2', 'string3');&#13;
	} // only test if property is true, otherwise error is thrown which fails the test&#13;
&#13;
	return _gtATF.endATF();&#13;
&#13;
})(outputs, steps, params, stepResult, assertEqual);&#13;
</value>
        <variable display_value="Test script">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
</record_update>
